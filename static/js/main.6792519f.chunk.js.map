{"version":3,"sources":["App.module.css","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","App","state","bright","memoryFirst","memorySecond","input","action","ok","click","text","setState","clickAC","clickPoint","indexOf","changeSign","Math","abs","equalClick","resultDiv","resultInt","resultMin","resultPlus","equalFunc","superSymbol","symbol","console","log","result","onMouseDownEffectFunc","level","s","render","className","wrapper","placeholder","row","greyButton","onClick","orangeButton","blackButton","zero","onMouseDown","onMouseUp","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6792519f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2WTYG\",\"row\":\"App_row__wEoJg\",\"input\":\"App_input__3Dr9-\",\"blackButton\":\"App_blackButton__1B8k1\",\"greyButton\":\"App_greyButton__3Shvf\",\"orangeButton\":\"App_orangeButton__248PM\",\"zero\":\"App_zero__3dlUy\",\"s\":\"App_s__2d0VT\",\"bright\":\"App_bright__3Fmtm\"};","import React from 'react';\nimport s from './App.module.css';\n\nclass App extends React.Component {\n\n    state = {\n        bright: '',\n\n        memoryFirst: '',\n        memorySecond: '',\n        input: '0',\n        action: '/',\n        ok: false\n    };\n\n    click = (text) => {\n        let input = this.state.input;\n        if (this.state.ok === false) {\n            this.setState({input: text, ok: true})\n        } else {\n            this.setState({input: input + text})\n        }\n    };\n\n    clickAC = () => {\n        this.setState({input: '0', memoryFirst: '', memorySecond: '', action: '', ok: false})\n    };\n\n    clickPoint = () => {\n        if (this.state.input.indexOf('.') === -1) {\n            this.setState({input: this.state.input + \".\"})\n        }\n    };\n    changeSign = () => {\n        if (+this.state.input > 0) {\n            this.setState({input: '-' + this.state.input})\n        }else {\n            this.setState({input: Math.abs(this.state.input) })\n        }\n    };\n\n    equalClick = () => {\n        switch (this.state.action) {\n            case '/':\n                let resultDiv = this.state.memorySecond / this.state.input;\n                this.setState({input: resultDiv, memorySecond: '', action: '', ok: false});\n                break;\n            case 'x':\n                let resultInt = this.state.memorySecond * this.state.input;\n                this.setState({input: resultInt, memorySecond: '', action: '', ok: false});\n                break;\n            case '-':\n                let resultMin = this.state.memorySecond - this.state.input;\n                this.setState({input: resultMin, memorySecond: '', action: '', ok: false});\n                break;\n            case '+':\n                let resultPlus = +this.state.memorySecond + +this.state.input;\n                this.setState({input: resultPlus, memorySecond: '', action: '', ok: false});\n                break;\n        }\n    };\n\n    equalFunc = () => {\n        switch (this.state.action) {\n            case '/':\n                let resultDiv = this.state.memorySecond / this.state.input;\n                return resultDiv;\n                break;\n            case 'x':\n                let resultInt = this.state.memorySecond * this.state.input;\n                return resultInt;\n                break;\n            case '-':\n                let resultMin = this.state.memorySecond - this.state.input;\n                return resultMin;\n                break;\n            case '+':\n                let resultPlus = +this.state.memorySecond + +this.state.input;\n                return resultPlus;\n                break;\n        }\n    };\n\n    superSymbol = (symbol) => {\n        switch (symbol) {\n            case '/':\n                if (this.state.memorySecond === '') {\n                    this.setState({action: '/', memorySecond: this.state.input, ok: false})\n                    console.log(this.state)\n                } else {\n                    let result = this.equalFunc();\n                    this.setState({action: '/', memorySecond: result, input: result, ok: false})\n                    console.log(this.state)\n                }\n                break;\n            case 'x':\n                if (this.state.memorySecond === '') {\n                    this.setState({action: 'x', memorySecond: this.state.input, ok: false})\n                } else {\n                    let result = this.equalFunc();\n                    this.setState({action: 'x', memorySecond: result, input: result, ok: false})\n                }\n                break;\n            case '-':\n                if (this.state.memorySecond === '') {\n                    this.setState({action: '-', memorySecond: this.state.input, ok: false})\n                } else {\n                    let result = this.equalFunc();\n                    this.setState({action: '-', memorySecond: result, input: result, ok: false})\n                }\n                break;\n            case '+':\n                if (this.state.memorySecond === '') {\n                    this.setState({action: '+', memorySecond: this.state.input, ok: false})\n                } else {\n                    let result = this.equalFunc();\n                    this.setState({action: '+', memorySecond: result, input: result, ok: false})\n                }\n                break;\n        }\n\n    };\n\n    onMouseDownEffectFunc = (level)=>{\n        if(level === 'up'){\n            this.setState({bright: s.bright})\n        }else{\n            this.setState({bright: ''})\n        }\n\n    };\n\n    render = () => {\n        return (\n            <div className={s.wrapper}>\n                <div>\n                    <input placeholder={this.state.input} className={s.input}/>\n                </div>\n                <div className={s.row}>\n                    <div className={s.greyButton} onClick={() => {\n                        this.clickAC()\n                    }}>AC\n                    </div>\n                    <div className={s.greyButton} onClick={this.changeSign}>+/-</div>\n                    <div className={s.greyButton}>%</div>\n                    <div className={s.orangeButton} onClick={() => {\n                        this.superSymbol('/')\n                    }}>/\n                    </div>\n                </div>\n                <div className={s.row}>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"7\")\n                    }}>7\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"8\")\n                    }}>8\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"9\")\n                    }}>9\n                    </div>\n                    <div className={s.orangeButton} onClick={() => {\n                        this.superSymbol('x')\n                    }}>x\n                    </div>\n                </div>\n                <div className={s.row}>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"4\")\n                    }}>4\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"5\")\n                    }}>5\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"6\")\n                    }}>6\n                    </div>\n                    <div className={s.orangeButton} onClick={() => {\n                        this.superSymbol('-')\n                    }}>-\n                    </div>\n                </div>\n                <div className={s.row}>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"1\")\n                    }}>1\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"2\")\n                    }}>2\n                    </div>\n                    <div className={s.blackButton} onClick={() => {\n                        this.click(\"3\")\n                    }}>3\n                    </div>\n                    <div className={s.orangeButton} onClick={() => {\n                        this.superSymbol('+')\n                    }}>+\n                    </div>\n                </div>\n                <div className={s.row}>\n                    <div className={s.zero} onClick={() => {\n                        this.click(\"0\")\n                    }}>0\n                    </div>\n                    <div className={`${s.blackButton} ${this.state.bright}`} onClick={this.clickPoint}\n                         onMouseDown={()=>this.onMouseDownEffectFunc('up')}\n                         onMouseUp={() => this.onMouseDownEffectFunc()}\n                    >,</div>\n                    <div className={`${s.orangeButton} ${this.state.bright}`} onClick={this.equalClick}\n                         onMouseDown={()=>this.onMouseDownEffectFunc('up')}\n                         onMouseUp={() => this.onMouseDownEffectFunc()}>=\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}